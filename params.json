{"name":"Aricalculator","body":"# AriCalculator\r\n\r\nAriCalculator is a project I plan to do with my daughter. The plan is to build a decent pocket calculator, by the time she is allowed to use one in school. Let's see how we'll do.\r\n\r\n## Hardware\r\n\r\nThe current hardware is based on the [S12G Micro EVB](https://github.com/hotwolf/S12G-Micro-EVB) using a MC9S12G128 micro controller from Freescale. However this board can be easily by an Arduino Mini or anything similar. The micro controller board is mounted on a isolation milled main board, which also holds a 5x7 key matrix and a 128x64 dot matrix reflective LCD.\r\n\r\n### Current status 26 May 2012 \r\n\r\nI've build the first prototype (RevA) and identified a number of bugs and difficulties for assembly. All of the bug fixes and design improvements have been included in RevB. \r\nI plan to build RevB at a later point in time. For now I will start the software development on my RevA prototype. Here are some pictures:\r\n\r\nFront view:\r\n![Aricalculator RevA front](/images/AriCalculator%20RevA%20front.png)\r\n\r\nSide view:\r\n![Aricalculator RevA side](/images/AriCalculator%20RevA%20side.png)\r\n\r\nBack view:\r\n![Aricalculator RevA back](/images/AriCalculator%20RevA%20back.png)\r\n\r\n## Software\r\n\r\nThe software for the AriCalculator will be written in Forth ([S12CForth](https://github.com/hotwolf/S12CForth)). Forth has the advantage, that... \r\n* the software can be run on any platform (running a compatible Forth)\r\n* it is a great language to teach programming \r\n* compiler and IDE are running on the MCU itself. All we need on the PC side is a terminal emulator and an editor.\r\n\r\n### Current status 26 May 2012 \r\n\r\nImplemented the low level LCD driver.\r\n\r\n\r\n","tagline":"A homemade pocket calculator","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}